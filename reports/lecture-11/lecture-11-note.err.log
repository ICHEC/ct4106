Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/asyncio/base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import dimod

# First initialize our own class qubo


# ni = np.array([3, 4, 5, 6, 8, 12, 11, 15])
# ni = np.array([1,2,3,4,5,6,7,8])

# Define the set
ni = np.random.randint(0, 31, size=60)
ni[-1] = int(ni.mean()*15)

qubofunc = qubo(ni=ni)     # initialise the function.

# extract the quadratic term as dictionary
qdict = {(i, j): 2*qubofunc.Q[i, j] for i in range(qubofunc.N) for j in range(qubofunc.N) if i>j}

# extract the linear term as dictionary
ldict = {i: qubofunc.V[i]+qubofunc.Q[i, i] for i in range(qubofunc.N)}
# the constant
constant = qubofunc.S**2

print(qdict)
print(ldict)
print(constant)

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[11], line 1[0m
[0;32m----> 1[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mdimod[39;00m
[1;32m      3[0m [38;5;66;03m# First initialize our own class qubo[39;00m
[1;32m      4[0m 
[1;32m      5[0m 
[0;32m   (...)[0m
[1;32m      8[0m 
[1;32m      9[0m [38;5;66;03m# Define the set[39;00m
[1;32m     10[0m ni [38;5;241m=[39m np[38;5;241m.[39mrandom[38;5;241m.[39mrandint([38;5;241m0[39m, [38;5;241m31[39m, size[38;5;241m=[39m[38;5;241m60[39m)

[0;31mModuleNotFoundError[0m: No module named 'dimod'

